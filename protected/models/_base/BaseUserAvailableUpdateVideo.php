<?php

/**
 * This is the model base class for the table "user_available_update_video".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserAvailableUpdateVideo".
 *
 * Columns in table "user_available_update_video" available as properties of the model,
 * followed by relations of table "user_available_update_video" available as properties of the model.
 *
 * @property integer $user_id
 * @property integer $subscription_id
 * @property integer $total_available_video
 *
 * @property PackageSubscription $subscription
 * @property Users $user
 */
abstract class BaseUserAvailableUpdateVideo extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_available_update_video';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserAvailableUpdateVideo|UserAvailableUpdateVideos', $n);
	}

	public static function representingColumn() {
		return 'user_id';
	}

	public function rules() {
		return array(
			array('user_id, subscription_id, total_available_video', 'numerical', 'integerOnly'=>true),
			array('user_id, subscription_id, total_available_video', 'default', 'setOnEmpty' => true, 'value' => null),
			array('user_id, subscription_id, total_available_video', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'subscription' => array(self::BELONGS_TO, 'PackageSubscription', 'subscription_id'),
			'user' => array(self::BELONGS_TO, 'Users', 'user_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'user_id' => null,
			'subscription_id' => null,
			'total_available_video' => Yii::t('app', 'Total Available Video'),
			'subscription' => null,
			'user' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('user_id', $this->user_id);
		$criteria->compare('subscription_id', $this->subscription_id);
		$criteria->compare('total_available_video', $this->total_available_video);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}