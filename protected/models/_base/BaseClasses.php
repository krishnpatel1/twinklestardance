<?php

/**
 * This is the model base class for the table "classes".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "Classes".
 *
 * Columns in table "classes" available as properties of the model,
 * followed by relations of table "classes" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $image_url
 * @property string $start_time
 * @property string $days_of_week
 * @property string $start_date
 * @property string $end_date
 * @property string $token
 * @property integer $status
 * @property string $created_at
 * @property integer $created_by
 * @property string $updated_at
 * @property integer $updated_by
 *
 * @property ClassDocuments[] $classDocuments
 * @property Users[] $users
 * @property Videos[] $videoses
 * @property Users $createdBy
 * @property Users $updatedBy
 * @property UserVideosTransaction[] $userVideosTransactions
 */
abstract class BaseClasses extends GxActiveRecord {

    public $from_start_date;
    public $to_start_date;
    public $from_end_date;
    public $to_end_date;
    
	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'classes';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'Classes|Classes', $n);
	}

	public static function representingColumn() {
		return 'name';
	}

	public function rules() {
		return array(
			array('status, created_by, updated_by', 'numerical', 'integerOnly'=>true),
			array('name, image_url, days_of_week, token', 'length', 'max'=>255),
			array('start_time, start_date, end_date, created_at, updated_at', 'safe'),
			array('name, image_url, start_time, days_of_week, start_date, end_date, token, status, created_at, created_by, updated_at, updated_by', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, image_url, start_time, days_of_week, start_date, end_date, token, status, created_at, created_by, updated_at, updated_by,from_start_date,to_start_date,from_end_date,to_end_date', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'classDocuments' => array(self::HAS_MANY, 'ClassDocuments', 'class_id'),
			'users' => array(self::MANY_MANY, 'Users', 'class_users(class_id, user_id)'),
			'videoses' => array(self::MANY_MANY, 'Videos', 'class_videos(class_id, video_id)'),
			'createdBy' => array(self::BELONGS_TO, 'Users', 'created_by'),
			'updatedBy' => array(self::BELONGS_TO, 'Users', 'updated_by'),
			'userVideosTransactions' => array(self::HAS_MANY, 'UserVideosTransaction', 'class_id'),
		);
	}

	public function pivotModels() {
		return array(
			'users' => 'ClassUsers',
			'videoses' => 'ClassVideos',
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'image_url' => Yii::t('app', 'Image Url'),
			'start_time' => Yii::t('app', 'Start Time'),
			'days_of_week' => Yii::t('app', 'Days Of Week'),
			'start_date' => Yii::t('app', 'Start Date'),
			'end_date' => Yii::t('app', 'End Date'),
			'token' => Yii::t('app', 'Token'),
			'status' => Yii::t('app', 'Status'),
			'created_at' => Yii::t('app', 'Created At'),
			'created_by' => null,
			'updated_at' => Yii::t('app', 'Updated At'),
			'updated_by' => null,
			'classDocuments' => null,
			'users' => null,
			'videoses' => null,
			'createdBy' => null,
			'updatedBy' => null,
			'userVideosTransactions' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('image_url', $this->image_url, true);
		$criteria->compare('start_time', $this->start_time, true);
		$criteria->compare('days_of_week', $this->days_of_week, true);
		$criteria->compare('start_date', $this->start_date, true);
		$criteria->compare('end_date', $this->end_date, true);
		$criteria->compare('token', $this->token, true);
		$criteria->compare('status', $this->status);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('created_by', $this->created_by);
		$criteria->compare('updated_at', $this->updated_at, true);
		$criteria->compare('updated_by', $this->updated_by);
        
        if(!empty($this->from_start_date) && empty($this->to_start_date))
        {
            $criteria->addCondition("start_date >= '$this->from_start_date'");  // date is database date column field
        }elseif(!empty($this->to_start_date) && empty($this->from_start_date))
        {
            $criteria->addCondition("start_date <= '$this->to_start_date'");
        }elseif(!empty($this->to_start_date) && !empty($this->from_start_date))
        {
            $criteria->addCondition("start_date  >= '$this->from_start_date' and start_date <= '$this->to_start_date'");
        }
        if(!empty($this->from_end_date) && empty($this->to_end_date))
        {
            $criteria->addCondition("end_date >= '$this->from_end_date'");  // date is database date column field
        }elseif(!empty($this->to_end_date) && empty($this->from_end_date))
        {
            $criteria->addCondition("end_date <= '$this->to_end_date'");
        }elseif(!empty($this->to_end_date) && !empty($this->from_end_date))
        {
            $criteria->addCondition("end_date  >= '$this->from_end_date' and end_date <= '$this->to_end_date'");
        }
		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}