<?php

/**
 * This is the model base class for the table "package_subscription".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "PackageSubscription".
 *
 * Columns in table "package_subscription" available as properties of the model,
 * followed by relations of table "package_subscription" available as properties of the model.
 *
 * @property integer $id
 * @property string $name
 * @property string $description
 * @property double $price_one_time
 * @property double $price
 * @property integer $discount
 * @property integer $duration
 * @property string $image_url
 * @property string $type
 * @property integer $base_video_limit
 * @property integer $available_update
 * @property integer $status
 * @property string $created_at
 * @property string $updated_at
 *
 * @property Cart[] $carts
 * @property OrderDetails[] $orderDetails
 * @property PackageSubscriptionDocumentsTransaction[] $packageSubscriptionDocumentsTransactions
 * @property PackageSubscriptionTransaction[] $packageSubscriptionTransactions
 * @property PackageSubscriptionTransaction[] $packageSubscriptionTransactions1
 * @property SubscriptionVideoTransaction[] $subscriptionVideoTransactions
 * @property UserPurchasedVideos[] $userPurchasedVideoses
 * @property UserPurchasedVideos[] $userPurchasedVideoses1
 */
abstract class BasePackageSubscription extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'package_subscription';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'PackageSubscription|PackageSubscriptions', $n);
	}

	public static function representingColumn() {
		return 'type';
	}

	public function rules() {
		return array(
			array('discount, duration, base_video_limit, available_update, status', 'numerical', 'integerOnly'=>true),
			array('price_one_time, price', 'numerical'),
			array('name, image_url', 'length', 'max'=>255),
			array('type', 'length', 'max'=>12),
			array('description, created_at, updated_at', 'safe'),
			array('name, description, price_one_time, price, discount, duration, image_url, type, base_video_limit, available_update, status, created_at, updated_at', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, name, description, price_one_time, price, discount, duration, image_url, type, base_video_limit, available_update, status, created_at, updated_at', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'carts' => array(self::HAS_MANY, 'Cart', 'package_subscription_id'),
			'orderDetails' => array(self::HAS_MANY, 'OrderDetails', 'package_subscription_id'),
			'packageSubscriptionDocumentsTransactions' => array(self::HAS_MANY, 'PackageSubscriptionDocumentsTransaction', 'subscription_id'),
			'packageSubscriptionTransactions' => array(self::HAS_MANY, 'PackageSubscriptionTransaction', 'package_id'),
			'packageSubscriptionTransactions1' => array(self::HAS_MANY, 'PackageSubscriptionTransaction', 'subscription_id'),
			'subscriptionVideoTransactions' => array(self::HAS_MANY, 'SubscriptionVideoTransaction', 'subscription_id'),
			'userPurchasedVideoses' => array(self::HAS_MANY, 'UserPurchasedVideos', 'subscription_id'),
			'userPurchasedVideoses1' => array(self::HAS_MANY, 'UserPurchasedVideos', 'package_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'name' => Yii::t('app', 'Name'),
			'description' => Yii::t('app', 'Description'),
			'price_one_time' => Yii::t('app', 'Price One Time'),
			'price' => Yii::t('app', 'Price'),
			'discount' => Yii::t('app', 'Discount'),
			'duration' => Yii::t('app', 'Duration'),
			'image_url' => Yii::t('app', 'Image Url'),
			'type' => Yii::t('app', 'Type'),
			'base_video_limit' => Yii::t('app', 'Base Video Limit'),
			'available_update' => Yii::t('app', 'Available Update'),
			'status' => Yii::t('app', 'Status'),
			'created_at' => Yii::t('app', 'Created At'),
			'updated_at' => Yii::t('app', 'Updated At'),
			'carts' => null,
			'orderDetails' => null,
			'packageSubscriptionDocumentsTransactions' => null,
			'packageSubscriptionTransactions' => null,
			'packageSubscriptionTransactions1' => null,
			'subscriptionVideoTransactions' => null,
			'userPurchasedVideoses' => null,
			'userPurchasedVideoses1' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id);
		$criteria->compare('name', $this->name, true);
		$criteria->compare('description', $this->description, true);
		$criteria->compare('price_one_time', $this->price_one_time);
		$criteria->compare('price', $this->price);
		$criteria->compare('discount', $this->discount);
		$criteria->compare('duration', $this->duration);
		$criteria->compare('image_url', $this->image_url, true);
		$criteria->compare('type', $this->type, true);
		$criteria->compare('base_video_limit', $this->base_video_limit);
		$criteria->compare('available_update', $this->available_update);
		$criteria->compare('status', $this->status);
		$criteria->compare('created_at', $this->created_at, true);
		$criteria->compare('updated_at', $this->updated_at, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}