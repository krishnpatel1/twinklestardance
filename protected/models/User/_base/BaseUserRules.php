<?php

/**
 * This is the model base class for the table "user_rules".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserRules".
 *
 * Columns in table "user_rules" available as properties of the model,
 * followed by relations of table "user_rules" available as properties of the model.
 *
 * @property string $id
 * @property string $role_id
 * @property string $module_id
 * @property string $privileges_controller
 * @property string $privileges_actions
 * @property string $role_desc
 * @property string $permission
 * @property string $permission_type
 *
 * @property Module $module
 * @property UserRole $role
 */
abstract class BaseUserRules extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_rules';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserRules|UserRules', $n);
	}

	public static function representingColumn() {
		return 'privileges_controller';
	}

	public function rules() {
		return array(
			array('module_id', 'required'),
			array('role_id, module_id', 'length', 'max'=>10),
			array('privileges_controller, privileges_actions', 'length', 'max'=>100),
			array('role_desc, permission_type', 'length', 'max'=>255),
			array('permission', 'length', 'max'=>5),
			array('role_id, privileges_controller, privileges_actions, role_desc, permission, permission_type', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, role_id, module_id, privileges_controller, privileges_actions, role_desc, permission, permission_type', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'module' => array(self::BELONGS_TO, 'Module', 'module_id'),
			'role' => array(self::BELONGS_TO, 'UserRole', 'role_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'role_id' => null,
			'module_id' => null,
			'privileges_controller' => Yii::t('app', 'Privileges Controller'),
			'privileges_actions' => Yii::t('app', 'Privileges Actions'),
			'role_desc' => Yii::t('app', 'Role Desc'),
			'permission' => Yii::t('app', 'Permission'),
			'permission_type' => Yii::t('app', 'Permission Type'),
			'module' => null,
			'role' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('role_id', $this->role_id);
		$criteria->compare('module_id', $this->module_id);
		$criteria->compare('privileges_controller', $this->privileges_controller, true);
		$criteria->compare('privileges_actions', $this->privileges_actions, true);
		$criteria->compare('role_desc', $this->role_desc, true);
		$criteria->compare('permission', $this->permission, true);
		$criteria->compare('permission_type', $this->permission_type, true);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}