<?php

/**
 * This is the model base class for the table "user_role".
 * DO NOT MODIFY THIS FILE! It is automatically generated by giix.
 * If any changes are necessary, you must set or override the required
 * property or method in class "UserRole".
 *
 * Columns in table "user_role" available as properties of the model,
 * followed by relations of table "user_role" available as properties of the model.
 *
 * @property string $id
 * @property string $parent_id
 * @property integer $tree_level
 * @property integer $sort_order
 * @property string $role_type
 * @property string $role_name
 * @property string $role_desc
 * @property integer $is_publish
 *
 * @property UserRules[] $userRules
 */
abstract class BaseUserRole extends GxActiveRecord {

	public static function model($className=__CLASS__) {
		return parent::model($className);
	}

	public function tableName() {
		return 'user_role';
	}

	public static function label($n = 1) {
		return Yii::t('app', 'UserRole|UserRoles', $n);
	}

	public static function representingColumn() {
		return 'role_type';
	}

	public function rules() {
		return array(
			array('role_type, role_name, role_desc, is_publish', 'required'),
			array('tree_level, sort_order, is_publish', 'numerical', 'integerOnly'=>true),
			array('parent_id', 'length', 'max'=>10),
			array('role_type', 'length', 'max'=>6),
			array('role_name', 'length', 'max'=>50),
			array('parent_id, tree_level, sort_order', 'default', 'setOnEmpty' => true, 'value' => null),
			array('id, parent_id, tree_level, sort_order, role_type, role_name, role_desc, is_publish', 'safe', 'on'=>'search'),
		);
	}

	public function relations() {
		return array(
			'userRules' => array(self::HAS_MANY, 'UserRules', 'role_id'),
		);
	}

	public function pivotModels() {
		return array(
		);
	}

	public function attributeLabels() {
		return array(
			'id' => Yii::t('app', 'ID'),
			'parent_id' => Yii::t('app', 'Parent'),
			'tree_level' => Yii::t('app', 'Tree Level'),
			'sort_order' => Yii::t('app', 'Sort Order'),
			'role_type' => Yii::t('app', 'Role Type'),
			'role_name' => Yii::t('app', 'Role Name'),
			'role_desc' => Yii::t('app', 'Role Desc'),
			'is_publish' => Yii::t('app', 'Is Publish'),
			'userRules' => null,
		);
	}

	public function search() {
		$criteria = new CDbCriteria;

		$criteria->compare('id', $this->id, true);
		$criteria->compare('parent_id', $this->parent_id, true);
		$criteria->compare('tree_level', $this->tree_level);
		$criteria->compare('sort_order', $this->sort_order);
		$criteria->compare('role_type', $this->role_type, true);
		$criteria->compare('role_name', $this->role_name, true);
		$criteria->compare('role_desc', $this->role_desc, true);
		$criteria->compare('is_publish', $this->is_publish);

		return new CActiveDataProvider($this, array(
			'criteria' => $criteria,
		));
	}
}